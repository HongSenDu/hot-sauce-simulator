{"version":3,"sources":["components/NavButton.jsx","components/LearnPopup.jsx","containers/Home.jsx","components/InfoCard.jsx","components/Ingredient.jsx","components/Tool.jsx","components/EndCard.jsx","containers/Learn.jsx","containers/Quiz.jsx","containers/EndQuiz.jsx","containers/Tutorial.jsx","App.js","reportWebVitals.js","index.js"],"names":["NavButton","text","disabled","link","onClick","className","to","Button","variant","size","LearnPopup","show","handleClose","Modal","onHide","Body","Row","Col","Home","useState","setShow","Container","Image","src","height","InfoCard","data","id","ingredient","console","log","Header","closeButton","Title","name","Array","isArray","info","map","elem","join","dangerouslySetInnerHTML","__html","taste","use","misc","Ingredient","setShowError","setError","tutorialInfo","setTutorialIngredients","processed","img","index","selected","setSelected","ingredients","setIngredients","setID","dragging","setDragging","data-index","object","includes","e","target","getAttribute","Card","style","width","border","position","x","y","onDrag","onStart","onStop","toElement","classList","contains","some","Img","margin","zIndex","Tool","tool","EndCard","masterList","setShowEnd","results","setResults","titles","useEffect","resultsArr","general","advice","seen","forEach","stage","resultString","stageName","addedIngredients","ing","specific","gen","push","Object","entries","missing","key","value","unshift","calculateBreakdown","result","length","Learn","tutorialShow","stepIndex","setStepIndex","setTutorialShow","setData","ingredientsList","toolIndex","setToolIndex","tools","setTool","setProcessed","done","setDone","showEnd","showError","error","setMasterList","nextTool","nextIndex","Alert","window","location","reload","slice","item","disableTool","added","concat","styled","Quiz","correctAnswers","setCorrectAnswers","history","useHistory","questionsList","questions","question","setQuestion","correct","setCorrect","submitted","setSubmitted","explanation","alt","options","option","active","answer","EndQuiz","Tutorial","steps","tutorialIngredients","obj","every","val","title","instructions","App","basename","process","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5a005a09.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\n\nconst NavButton = ({text, disabled, link, onClick, className}) => {\n    return (\n        <Link to={link}>\n            <Button disabled={disabled} variant=\"success\" size=\"lg\" onClick={onClick} className={className}>\n                {text}\n            </Button>\n        </Link>\n    )\n}\n\nexport default NavButton;","import { Button, Modal } from 'react-bootstrap';\nimport NavButton from './NavButton';\nimport React, { useState } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nconst LearnPopup = ({ show, handleClose }) => {\n\n    return (\n        <>\n            <Modal show={show} onHide={handleClose} className=\"d-flex justify-content-center align-items-center\">\n                <Modal.Body className=\"text-center\"> <h5>You are taking the first step in becoming a hot sauce connoisseur! </h5> <br /> This learning module consists of an interactive simulation that allows you to see how ingredients affect the overall taste of hot sauce.\n                 <br /><br /> Head to the tutorial for a step by step guide about how to use the simulator. <br /> <br/> If you are confident, click explore to start interacting with the simulator without restrictions right away.\n                    <Row className=\"mt-5\">\n                        <Col className=\"text-center\">\n                            <NavButton text=\"Tutorial\" link={'/tutorial'} />\n                        </Col>\n                        <Col className=\"text-center\">\n                            <NavButton text=\"Explore\" link={'/learn'} onClick={handleClose} />\n                        </Col>\n                    </Row>\n                </Modal.Body>\n            </Modal>\n        </>\n    );\n}\n\nexport default LearnPopup;","import { Container, Row, Col, Image } from 'react-bootstrap';\nimport NavButton from '../components/NavButton';\nimport LearnPopup from '../components/LearnPopup';\nimport React, { useState } from 'react';\n\nconst Home = () => {\n    const [show, setShow] = useState(false);\n    const handleShow = () => setShow(true);\n    const handleClose = () => setShow(false);\n\n    return (\n        <Container>\n            <Row className=\"text-center my-5\">\n                <h1 className=\"m-auto\">Welcome to Hot Sauce Simulator</h1>\n            </Row>\n            <Row className=\"d-flex justify-content-center my-4\">\n                <Image src=\"https://images.sks-bottle.com/images/Hotsauce.jpg\" height=\"350\"></Image>\n            </Row>\n            <Row className=\"text-center\">\n                <h5>Learn how different ingredients affect the taste of your hot sauce, how to purchase the best one to suit your preferences, and how to make your own!</h5>\n            </Row>\n\n            <Row className=\"mt-5\">\n                <Col className=\"text-center\">\n                    <NavButton text=\"Learn\" onClick={handleShow} />\n                </Col>\n                <Col className=\"text-center\">\n                    <NavButton link=\"/quiz\" text=\"Quiz\" />\n                </Col>\n            </Row>\n            {show &&\n                <div>\n                    <LearnPopup show={show} handleClose={handleClose} />\n                </div>}\n        </Container>\n    )\n}\n\nexport default Home;","import { Modal } from 'react-bootstrap';\nimport React, { useState } from 'react';\n\nconst InfoCard = ({ data, id, show, handleClose }) => {\n    const [ingredient] = useState(data[id])\n    console.log(ingredient)\n    return (\n        <>\n            <Modal show={show} onHide={handleClose} className=\"d-flex justify-content-center align-items-center\">\n                <Modal.Header className=\"m-auto\" closeButton>\n                    <Modal.Title className=\"\">{ingredient.name}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body className=\"\">\n                    {Array.isArray(ingredient.info) ? \"This item consists of \" + ingredient.info.map((elem) => {\n                        return elem.name;\n                    }).join(\", \") : <>\n                        <p><b>Taste:</b> <span dangerouslySetInnerHTML={{ __html: ingredient.taste }} /></p>\n                        <p><b>Use:</b>  <span dangerouslySetInnerHTML={{ __html: ingredient.use }} /></p>\n                        <p dangerouslySetInnerHTML={{ __html: ingredient.misc }} />\n                    </>}\n                </Modal.Body>\n            </Modal>\n        </>\n    );\n}\n\nexport default InfoCard;","import React, { useState } from 'react';\nimport { Container, Row, Col, Card } from 'react-bootstrap';\nimport InfoCard from './InfoCard';\nimport Draggable, { DraggableCore } from 'react-draggable'; // Both at the same time\n\n\nconst Ingredient = ({ setShowError, setError, tutorialInfo, setTutorialIngredients, processed, data, name, img, index, selected, setSelected, ingredients, setIngredients }) => {\n    const [show, setShow] = useState(false);\n    const [id, setID] = useState(0);\n    const [dragging, setDragging] = useState(false);\n\n    const handleClose = () => setShow(false);\n\n    const onStart = (e) => {\n        setSelected(e.target.getAttribute(\"data-index\"))\n        setShow(false);\n    }\n\n    const handleShow = (e) => {\n        setID(e.target.getAttribute(\"data-index\"))\n        setShow(true);\n    }\n    const handleStop = (e) => {\n        if (dragging) {\n            if (e.toElement.classList.contains(\"trans\")) {\n                setShowError(false);\n                if (ingredients.some(ingredient => ingredient.name === data[selected].name)) {\n                    setError(\"You already added that ingredient!\");\n                    setShowError(true);\n                } else {\n                    setIngredients([...ingredients, data[selected]]);\n                    if (tutorialInfo)\n                        setTutorialIngredients([...ingredients, data[selected]])\n                }\n            }\n        }\n        else {\n            setID(e.target.getAttribute(\"data-index\"))\n            setShow(true);\n        }\n        setDragging(false);\n        setSelected(-1)\n    }\n\n    const onDrag = () => {\n        setDragging(true);\n    }\n\n    return (\n        <>\n            <div data-index={index} onClick={(tutorialInfo && !tutorialInfo.object.includes(data[index].name)) ? handleShow : ''} className='w-25 d-inline-block mx-5 my-2'>\n                <Card data-index={index} style={{ width: '10rem', border: 'none' }}>\n                    <Draggable disabled={processed || (tutorialInfo && !tutorialInfo.object.includes(data[index].name))} position={{ x: 0, y: 0 }} onDrag={onDrag} onStart={onStart} onStop={handleStop}>\n                        <Card.Img data-index={index} className=\"equal\" variant=\"top\" src={img} style={{ width: \"100%\", height: \"100%\", margin: 'auto', zIndex: 1 }} />\n                    </Draggable>\n                    <Card.Body data-index={index} className=\"text-center\">\n                        <Card.Title data-index={index}>{name}</Card.Title>\n                    </Card.Body>\n                </Card>\n            </div>\n            {show && <InfoCard data={data} show={show} handleClose={handleClose} id={id} />}\n        </>\n    )\n}\n\nexport default Ingredient;","import React, { useState } from 'react';\nimport { Container, Row, Col, Card } from 'react-bootstrap';\nimport InfoCard from './InfoCard';\n\n\nconst Tool = ({ tool, ingredients }) => {\n\n\n    return (\n        <>\n            <Card className=\"tool\" style={{ width: tool.width, border: 'none' }}>\n                <div className=\"trans\" />\n                <Card.Img className=\"tool\" variant=\"top\" src={tool.img} style={{ width: \"100%\", height: \"100%\", margin: 'auto' }} />\n            </Card>\n        </>\n    )\n}\n\nexport default Tool;","import { Modal } from 'react-bootstrap';\nimport React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport data from '../data/breakdown';\n\nconst EndCard = ({ masterList, setShowEnd }) => {\n    const [results, setResults] = useState([]);\n    const [titles] = useState([\"General\", \"Pan\", \"Blender\", \"Bottle\", \"Advice for next time\"])\n    const handleClose = () => setShowEnd(false);\n    console.log(results)\n    const calculateBreakdown = () => {\n        let resultsArr = [];\n        let general = \"\";\n        let advice = \"\";\n        let seen = {};\n        masterList.forEach((stage) => {\n            let resultString = ``;\n            let stageName = data[`stage ${stage.stage}`];\n            stage.addedIngredients.forEach((ing) => {\n                console.log(ing)\n                let specific = stageName[ing.name]\n                let gen = data[\"general\"][ing.name]\n                if (specific)\n                    resultString += `<p className=\"py-2\"><strong>${ing.name}:</strong> ${specific}</p>`;\n                if (gen && !seen[ing.name])\n                    general += `<p className=\"py-2\"><strong>${ing.name}:</strong> ${gen}</p>`\n                seen[ing.name] = 1\n            })\n            resultsArr.push(resultString)\n            Object.entries(stageName.missing).forEach(([key, value]) => {\n                console.log(key)\n                if (!seen[key])\n                    advice += `<p className=\"py-2\"><strong>${key}: </strong>${value} </p>`\n            })\n        })\n        resultsArr.unshift(general);\n        resultsArr.push(advice);\n        console.log(advice)\n        setResults(resultsArr)\n    }\n\n    useEffect(() => {\n        calculateBreakdown();\n    }, [])\n\n    return (\n        <>\n            <Modal show={true} onHide={handleClose} className=\"w-100 d-flex justify-content-center align-items-center\">\n                <Modal.Header closeButton>\n                    <Modal.Title className=\"w-100 text-center m-auto\">Your Breakdown</Modal.Title>\n                </Modal.Header>\n                <Modal.Body className=\"text-center\">\n                    {results.map((result, index) => {\n                        return (<><h4><u>{titles[index]}</u></h4> {result.length > 0 ? <p dangerouslySetInnerHTML={{ __html: result }} /> : <p className=\"py-1\"> {index == 4 ? \"No additional advice!\" : \"No new ingredients!\"} </p>} </>)\n                    })}\n                </Modal.Body>\n            </Modal>\n        </>\n    );\n}\n\nexport default EndCard;","import React, { useState } from 'react';\nimport { Row, Col, Alert, Button } from 'react-bootstrap';\n\nimport Ingredient from '../components/Ingredient';\nimport Tool from '../components/Tool';\nimport NavButton from '../components/NavButton';\nimport EndCard from '../components/EndCard';\n\nimport ingredients from '../data/ingredients.json';\nimport tools from '../data/tools.json';\nimport results from '../data/results.json';\n\nconst Learn = ({ tutorialShow, stepIndex, setStepIndex, setTutorialShow, tutorialInfo, setTutorialIngredients }) => {\n    const [data, setData] = useState(ingredients['ingredients']);\n    const [ingredientsList, setIngredients] = useState([]);\n    const [selected, setSelected] = useState(-1)\n    const [toolIndex, setToolIndex] = useState(0);\n    const [tool, setTool] = useState(tools[\"tools\"][toolIndex]);\n    const [processed, setProcessed] = useState(false);\n    const [done, setDone] = useState(false);\n    const [show, setShow] = useState(false);\n    const [showEnd, setShowEnd] = useState(false);\n    const [showError, setShowError] = useState(false);\n    const [error, setError] = useState(\"\");\n    const [masterList, setMasterList] = useState([]);\n\n    const checkConditions = () => {\n        if (toolIndex == 1 && !ingredientsList.some(ingredient => ingredient.name === \"Blend\"))\n            return false;\n        else if (toolIndex == 2 && !ingredientsList.some(ingredient => ingredient.name === \"Hot Sauce Liquid\"))\n            return false;\n        return true;\n    }\n\n    const handleProcess = () => {\n        setShowError(false)\n        if (ingredientsList.length > 0 && checkConditions()) {\n            if (toolIndex == 2) {\n                nextTool();\n                setDone(true);\n                setShowEnd(true);\n            } else {\n                let result = results['results'][toolIndex];\n                result['info'] = [];\n                if (data.some(ingredient => ingredient.name === \"Blend\")) {\n                    ingredientsList.forEach((added) => {\n                        if (added.name == \"Blend\") {\n                            result['info'] = result['info'].concat(added.info)\n                        } else {\n                            result['info'].push(added);\n                        }\n                    })\n                } else {\n                    result['info'] = ingredientsList;\n                }\n                setData([result, ...data]);\n            }\n            setProcessed(true);\n            setShow(true);\n            if (tutorialInfo) {\n                setStepIndex(stepIndex + 1)\n                setTutorialShow(true)\n            }\n        } else {\n            if (toolIndex == 1) {\n                setError(\"You didn't add the blend to the mixer!\")\n            } else if (toolIndex == 2) {\n                setError(\"You didn't add the liquid to the bottle!\")\n            }\n            setShowError(true)\n        }\n    }\n\n    const nextTool = () => {\n        setMasterList([...masterList, {\n            \"stage\": toolIndex,\n            \"addedIngredients\": ingredientsList\n        }])\n        let nextIndex = toolIndex + 1\n        setProcessed(false);\n        setTool(tools['tools'][nextIndex]);\n        setToolIndex(nextIndex);\n        setIngredients([]);\n        if (tutorialInfo) {\n            setStepIndex(stepIndex + 1)\n            setTutorialShow(true)\n        }\n    }\n\n    const handleClose = () => setShow(false);\n\n    return (\n        <>\n\n            <Row className=\"pt-0\">\n                {\n                    processed && (\n                        <Alert variant={'success'} className=\"w-100 m-auto text-center\">\n                            <div>{tool.text}</div>\n                        </Alert>\n                    )\n                }\n                {\n                    showError && (\n                        <Alert variant={'warning'} className=\"w-100 m-auto text-center\">\n                            <div>{error}</div>\n                        </Alert>\n                    )\n                }\n            </Row>\n\n            <Row className=\"d-flex py-3 justify-content-between\">\n                {!tutorialInfo && <div className=\"px-5\"><NavButton text={\"Tutorial\"} link=\"/tutorial\" className=\"top-but\" /></div>}\n                {!tutorialInfo && <div className=\"px-5\"><NavButton text={\"Restart\"} onClick={() => window.location.reload()} className=\"top-but\" /></div>}\n                {tutorialInfo && <div className=\"px-5\"><NavButton text={\"Explore\"} link=\"/learn\" className=\"top-but\" /></div>}\n                {tutorialInfo && <Button variant=\"success\" size=\"lg\" onClick={tutorialShow}>\n                    Show Tutorial Step Again\n                    </Button>\n                }\n                <div className=\"px-5\"><NavButton text={\"Quiz\"} link=\"/quiz\" width=\"300px\" className=\"top-but\" /></div>\n            </Row>\n            <Row className=\"pt-1\">\n                <Col className=\"equal\">\n                    {data.slice(0, 6).map((item, index) => {\n                        return (item[\"ingredients\"] ? <></> : <><Ingredient setShowError={setShowError} setError={setError} processed={processed} data={data} name={item.name} img={item.img} index={index} selected={selected}\n                            tutorialInfo={tutorialInfo} setTutorialIngredients={setTutorialIngredients} setSelected={setSelected} ingredients={ingredientsList} setIngredients={setIngredients} /> {<br></br> && index % 3 == 0}</>)\n                    })}\n                </Col>\n                <Col className=\"d-flex flex-column justify-content-center align-items-center\">\n                    <div className=\"top\">\n                        <b>Ingredients added:</b> {!processed && ingredientsList.map((item) => (item.name)).join(\", \")}\n                    </div>\n                    <Tool processed={processed} tool={tool} ingredients={ingredientsList} /><br></br>\n                    <Row className=\"bot\">\n                        <Col>\n                            {processed && !done ? <NavButton disabled={tutorialInfo && tutorialInfo.disableTool} text=\"Next\" onClick={nextTool} /> : (!done && (\n                                <NavButton text={tool['action']} disabled={tutorialInfo && tutorialInfo.disableTool} onClick={handleProcess} />\n                            ))}\n                            {done && <>\n                                {tutorialInfo && <NavButton text={\"Restart\"} onClick={() => window.location.reload()} className=\"mx-2 middle-but\" />}\n                                {<NavButton text={\"View Results\"} onClick={() => setShowEnd(true)} className=\"mx-2 middle-but\" />}\n                            </>}\n                        </Col>\n                        {showEnd && <EndCard masterList={masterList} setShowEnd={setShowEnd} />}\n                    </Row>\n                </Col>\n                <Col className=\"equal\">\n                    {data.slice(6, 12).map((item, index) => {\n                        return (<><Ingredient setShowError={setShowError} setError={setError} processed={processed} data={data} name={item.name} img={item.img} index={index + 6} selected={selected}\n                            tutorialInfo={tutorialInfo} setTutorialIngredients={setTutorialIngredients} setSelected={setSelected} ingredients={ingredientsList} setIngredients={setIngredients} /> {<br></br> && index % 2 == 1}</>)\n                    })}\n                </Col>\n            </Row>\n        </>\n    )\n}\n\nexport default Learn;","import { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Container, Row, Col, Button, Alert } from 'react-bootstrap';\nimport { useHistory } from \"react-router-dom\";\nimport questionsList from '../data/questions';\n\nconst Image = styled.img`\n    width: 25rem;\n    height:15rem;\n    object-fit:contain;\n`;\n\nconst Quiz = ({ correctAnswers, setCorrectAnswers }) => {\n    const history = useHistory();\n    const [questions] = useState(questionsList['questions'])\n    const [question, setQuestion] = useState(0);\n    const [selected, setSelected] = useState(-1);\n    const [correct, setCorrect] = useState(false);\n    const [submitted, setSubmitted] = useState(false);\n\n    const next = () => {\n        if (question + 1 < questions.length) {\n            setQuestion(question + 1);\n            setSelected(-1);\n            setSubmitted(false);\n        } else {\n            history.push(\"/quiz-end\");\n        }\n    };\n\n    const submit = () => {\n        setCorrect(selected === questions[question].answer);\n        if (selected === questions[question].answer) {\n            setCorrectAnswers(correctAnswers + 1);\n        }\n        setSubmitted(true);\n    };\n\n    return (\n        <Container>\n            <Row className=\"my-3 px-5 text-center\">\n                <h1 className=\"text-center m-auto\">Quiz</h1>\n            </Row>\n            {\n                submitted && (\n                    <Alert variant={correct ? 'success' : 'danger'}>\n                        <strong>{correct ? 'Correct!' : 'Incorrect.'}</strong>\n                        <div>{questions[question].explanation}</div>\n                    </Alert>\n                )\n            }\n            <Row className=\"mt-5 px-5\">\n                <Col className=\"d-flex justify-content-center align-items-center\">\n                    <Image src={questions[question].img} alt={questions[question]} />\n                </Col>\n            </Row>\n            <Row className=\"my-3 text-center\">\n                <h2 className=\"text-center m-auto\">{questions[question].question}</h2>\n            </Row>\n            <Row className=\"my-3\">\n                {\n                    questions[question].options.map((option, index) => (\n                        <>\n                            <Col className=\"text-center\">\n\n                                <Button\n                                    className=\"my-3\"\n                                    variant=\"outline-dark\"\n                                    size=\"lg\"\n                                    onClick={() => setSelected(option)}\n                                    active={selected === option}\n                                >\n                                    {option}\n                                </Button>\n                            </Col>\n                        </>\n                    ))\n                }\n            </Row>\n            <Row className=\"mt-2 px-5 d-flex justify-content-center\">\n                {\n                    submitted ? (\n                        <Button\n                            className=\"my-3\"\n                            variant=\"success\"\n                            size=\"lg\"\n                            onClick={() => next()}\n                        >\n                            Next Question\n                        </Button>\n                    ) : (\n                        <Button\n                            className=\"my-3\"\n                            variant=\"success\"\n                            size=\"lg\"\n                            onClick={() => submit()}\n                        >\n                            Submit\n                        </Button>\n                    )\n                }\n            </Row>\n        </Container>\n    )\n}\n\nexport default Quiz;","import NavButton from '../components/NavButton';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nconst EndQuiz = ({ correctAnswers }) => {\n    return (\n        <Container>\n            <Row className=\"text-center mt-5\">\n                <h1 className=\"m-auto\">Congratulations, you got {correctAnswers} questions correct.</h1>\n            </Row>\n\n            <Row className=\"mt-5\">\n                <Col className=\"text-center\">\n                    <NavButton link=\"/learn\" text=\"Restart Simulator\" />\n                </Col>\n                <Col className=\"text-center\">\n                    <NavButton link=\"/quiz\" text=\"Take the quiz again\" />\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default EndQuiz;","\nimport React, { useState } from 'react';\nimport { Modal, Button } from 'react-bootstrap';\nimport Learn from \"./Learn\";\nimport data from '../data/tutorial';\n\nconst Tutorial = () => {\n    const [steps, setSteps] = useState(data['steps']);\n    const [stepIndex, setStepIndex] = useState(0);\n    const [tutorialIngredients, setTutorialIngredients] = useState([]);\n    const [show, setShow] = useState(true);\n\n\n    const handleShow = () => setShow(true);\n    const handleClose = () => setShow(false);\n\n    if (steps[stepIndex].object.length > 0) {\n        let added = tutorialIngredients.map(obj => obj.name)\n        console.log(added)\n        if (steps[stepIndex].object.every(val => added.includes(val))) {\n            setStepIndex(stepIndex + 1)\n            setTutorialIngredients([])\n            setShow(true)\n        }\n    }\n    return (\n        <>\n            <Modal show={show} onHide={handleClose} className=\"d-flex justify-content-center align-items-center\">\n                <Modal.Header className=\"p-0 text-center\" closeButton>\n                    <Modal.Title className=\"p-3 m-auto text-center\">{steps[stepIndex].title}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body className=\"text-center\">\n                    <p dangerouslySetInnerHTML={{ __html: steps[stepIndex].instructions }} />\n                </Modal.Body>\n            </Modal>\n            <Learn tutorialShow={setShow} stepIndex={stepIndex} setTutorialShow={setShow} setStepIndex={setStepIndex} tutorialInfo={steps[stepIndex]} setTutorialIngredients={setTutorialIngredients}></Learn>\n        </>\n    );\n}\n\nexport default Tutorial;","import './App.css';\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport Home from './containers/Home';\nimport Learn from './containers/Learn';\nimport Quiz from './containers/Quiz';\nimport EndQuiz from './containers/EndQuiz';\nimport Tutorial from './containers/Tutorial';\n\nfunction App() {\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      {/* <NavBar /> */}\n      <Switch>\n        <Route exact path='/' component={Home} />\n        <Route exact path='/tutorial' component={Tutorial} />\n        <Route path='/learn' component={Learn} />\n        <Route exact path='/quiz'>\n          <Quiz correctAnswers={correctAnswers} setCorrectAnswers={setCorrectAnswers} />\n        </Route>\n        <Route exact path='/quiz-end'>\n          <EndQuiz correctAnswers={correctAnswers} />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}